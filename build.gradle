// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = '2.1.0'
    ext.hilt_version = '2.56.2'
    apply from: 'version.gradle'
    repositories {
        mavenLocal()
        google()
        mavenCentral()
        maven {
            url = uri('./router_gradle_plugin')
        }
        maven{
            url = "https://maven.aliyun.com/repository/public"
        }
        maven { url= 'https://maven.aliyun.com/repository/google' }
        maven { url= 'https://maven.aliyun.com/repository/central' }
        maven { url ='https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url= 'https://maven.aliyun.com/repository/jcenter' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.10.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"
        classpath 'org.jetbrains.kotlin:compose-compiler-gradle-plugin:2.1.0'
//        classpath "com.ca.router_gradle_plugin:injector:1.0.0.0"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}


subprojects {
    afterEvaluate { project ->
        if (project.plugins.hasPlugin('com.android.application') ||
                project.plugins.hasPlugin('com.android.library')) {

            android {
                buildFeatures {
                    buildConfig = true
                }
            }
        }
        // 为所有应用Hilt插件的项目配置
        if (project.plugins.hasPlugin('dagger.hilt.android.plugin')) {
            // 确保配置存在再设置
            if (project.hasProperty('hilt')) {
                hilt {
                    enableExperimentalClasspathAggregation = true
                    enableAggregatingTask = false
                }
            }
        }


        if (plugins.hasPlugin('com.android.application') ||
                plugins.hasPlugin('com.android.library')) {

            android {
                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_17
                    targetCompatibility JavaVersion.VERSION_17
                }

                kotlinOptions {
                    jvmTarget = '17'
                }

                buildFeatures {
                    buildConfig = true
                }
            }
        }
    }
}
// 统一所有模块的Kotlin版

task clean(type: Delete) {
    delete rootProject.buildDir
}
